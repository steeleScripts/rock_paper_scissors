{"ast":null,"code":"var _jsxFileName = \"/home/user/workspace/The Odin Project/Web Development 101/rock_paper_scissors/rps/src/App.js\";\n\n/*App Goals: \n-\n-Cookie score tracker\n\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nfunction TitleScreen() {\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"TitleScreen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/play\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"playButton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Click to Play\")))));\n} //\n\n\nfunction PlayRound() {\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"Game\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Rock, Paper, or Scissors?\"), React.createElement(\"div\", {\n    className: \"ButtonContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: \"/result\",\n      state: {\n        player: \"ROCK\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"rock\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: {\n      pathname: \"/result\",\n      state: {\n        player: \"PAPER\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"paper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: {\n      pathname: \"/result\",\n      state: {\n        player: \"SCISSORS\"\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    id: \"scissors\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })))));\n}\n\nclass Result extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      \"cpu\": \"\",\n      \"player\": \"\",\n      \"result\": \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/play\").then(player => this.setState({\n      player\n    }));\n\n    let computerPlay = () => {\n      let play = Math.floor(Math.random() * 3);\n\n      switch (play) {\n        case 0:\n          play = \"ROCK\";\n          break;\n\n        case 1:\n          play = \"PAPER\";\n          break;\n\n        case 2:\n          play = \"SCISSORS\";\n          break;\n\n        default:\n          console.log(\"Error computerPlay returned: \" + play);\n      }\n\n      this.setState({\n        cpu: play\n      });\n    };\n\n    let playRound = () => {\n      switch (this.state.player) {\n        case \"ROCK\":\n          switch (this.state.cpu) {\n            case \"ROCK\":\n              this.setState({\n                result: \"Rock against rock; it's a tie game, try again\"\n              });\n              break;\n\n            case \"PAPER\":\n              this.setState({\n                result: \"Paper beats rock, yeah I don't get it either. You lose though.\"\n              });\n              break;\n\n            case \"SCISSORS\":\n              this.setState({\n                result: \"Rock beats scissors, winner!\"\n              });\n              break;\n          }\n\n          break;\n\n        case \"PAPER\":\n          switch (this.state.cpu) {\n            case \"ROCK\":\n              this.setState({\n                result: \"Paper beats rock! Don't question it, you win!!\"\n              });\n              break;\n\n            case \"PAPER\":\n              this.setState({\n                result: \"Any more paper and we'd have a small pamplet. It's a tie\"\n              });\n              break;\n\n            case \"SCISSORS\":\n              this.setState({\n                result: \"Your paper got sliced. You lose. \"\n              });\n              break;\n          }\n\n          break;\n\n        case \"SCISSORS\":\n          switch (this.state.cpu) {\n            case \"ROCK\":\n              this.setState({\n                result: \"A rock smashed your scissors. You lose.\"\n              });\n              break;\n\n            case \"PAPER\":\n              this.setState({\n                result: \"Snippity dippity. You have the victory\"\n              });\n              break;\n\n            case \"SCISSORS\":\n              this.setState({\n                result: \"Tie game, better look away.\"\n              });\n              break;\n          }\n\n          break;\n\n        default:\n          console.log(\"Error\");\n          break;\n      }\n    };\n\n    computerPlay();\n    playRound();\n  }\n\n  render() {\n    console.log(this.state.player + \" \" + this.state.cpu + \" \" + this.state.result);\n    let result = this.state.result;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"Result\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, result));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(React.Fragment, null, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }, React.createElement(TitleScreen, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/play\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(PlayRound, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/result\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Result, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"/stats\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }))));\n}\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 159\n  },\n  __self: this\n}), document.getElementById(\"root\"));\nexport default App;\n/*class Score extends React.Component{\n  state = {\n    playerScore: 0,\n    cpuScore :0\n  }\n  \n  addWin = () => this.setState({playerScore: this + 1});\n  addLoss = () => this.setState({cpuScore: this + 1});\n  getPlayerScore = () => {return this.state\n.playerScore}\n  getCpuScore = \n    () => {return this.state.cpuScore}\n  \n  render(){\n    return <div className=\"Score\">Player: {this.getPlayerScore()} Computer: {this.getCpuScore()}</div>;\n  }\n}*/","map":{"version":3,"sources":["/home/user/workspace/The Odin Project/Web Development 101/rock_paper_scissors/rps/src/App.js"],"names":["React","ReactDOM","BrowserRouter","Route","Link","Switch","TitleScreen","PlayRound","pathname","state","player","Result","Component","constructor","componentDidMount","fetch","then","setState","computerPlay","play","Math","floor","random","console","log","cpu","playRound","result","render","App","document","getElementById"],"mappings":"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","sourcesContent":["/*App Goals: \n-\n-Cookie score tracker\n\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\"\n\nfunction TitleScreen() {\n  return (\n    <>        \n      <div className=\"TitleScreen\">        \n        <Link to=\"/play\">\n          <button id=\"playButton\" >\n            <h1>Click to Play</h1>\n          </button>\n        </Link>\n      </div>          \n    </>\n  );\n}\n\n//\n\nfunction PlayRound() {     \n  return (\n    <>      \n      <div className=\"Game\">\n        <h1>Rock, Paper, or Scissors?</h1>     \n        \n        <div className=\"ButtonContainer\">\n          <Link to={{pathname: \"/result\", state: {player: \"ROCK\"} }}>\n            <button id=\"rock\"></button>\n          </Link>\n          <Link to={{pathname: \"/result\", state: {player: \"PAPER\"} }}>\n            <button id=\"paper\"></button>\n          </Link>\n          <Link to={{pathname: \"/result\", state: {player: \"SCISSORS\"} }}>\n            <button id=\"scissors\"></button>\n          </Link>          \n        </div>        \n      </div>\n    </>\n  );  \n  \n}\n\nclass Result extends React.Component {\n  constructor() {\n    super();\n    this.state = {\"cpu\": \"\", \"player\": \"\", \"result\": \"\"}\n  }\n\n  componentDidMount() {\n    fetch(\"/play\")\n      .then(player => this.setState({ player }));\n\n    let computerPlay = () => {\n      let play = Math.floor(Math.random() * 3);\n      switch(play){\n        case 0: play = \"ROCK\"; break;\n        case 1: play = \"PAPER\"; break;\n        case 2: play = \"SCISSORS\"; break;\n        default: console.log(\"Error computerPlay returned: \" + play);\n      }\n      this.setState({cpu: play});\n    }\n\n    let playRound = () => {      \n      switch(this.state.player){\n          case \"ROCK\":\n              switch(this.state.cpu){\n                  case \"ROCK\":\n                      this.setState({result: \"Rock against rock; it's a tie game, try again\"});\n                      break;\n                  case \"PAPER\":\n                      this.setState({result: \"Paper beats rock, yeah I don't get it either. You lose though.\"});\n                      break;\n                  case \"SCISSORS\":\n                      this.setState({result: \"Rock beats scissors, winner!\"});\n                      break;\n              }\n              break;\n          case \"PAPER\":\n              switch(this.state.cpu){\n                  case \"ROCK\":\n                      this.setState({result: \"Paper beats rock! Don't question it, you win!!\"});\n                      break;\n                  case \"PAPER\":\n                      this.setState({result: \"Any more paper and we'd have a small pamplet. It's a tie\"});\n                      break;\n                  case \"SCISSORS\":\n                      this.setState({result: \"Your paper got sliced. You lose. \"});\n                      break;\n              }\n              break;\n          case \"SCISSORS\":\n              switch(this.state.cpu){\n                  case \"ROCK\":\n                    this.setState({result: \"A rock smashed your scissors. You lose.\"});\n                    break;\n                  case \"PAPER\":\n                    this.setState({result: \"Snippity dippity. You have the victory\"});\n                    break;\n                  case \"SCISSORS\":\n                    this.setState({result: \"Tie game, better look away.\"});\n                    break;\n              }                     \n              break;\n            default:\n                console.log(\"Error\");\n                break;\n                    \n              }   \n          }\n    computerPlay();\n    playRound();\n  }\n          \n          \n    \n          \n\n  render() { \n    console.log(this.state.player + \" \" + this.state.cpu + \" \" + this.state.result);\n    let result = this.state.result;\n    return (\n      <>\n        <div className=\"Result\">{result}</div>      \n      </>\n    );\n  }  \n}\n\nfunction App() {  \n  return (\n    <>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <TitleScreen />\n        </Route>\n        <Route path=\"/play\">\n          <PlayRound />\n        </Route>\n        <Route path=\"/result\">\n          <Result />\n        </Route>\n        <Route path=\"/stats\">\n        </Route>\n      </Switch>\n    </BrowserRouter>\n    </>\n  )  \n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n\nexport default App;\n\n\n/*class Score extends React.Component{\n  state = {\n    playerScore: 0,\n    cpuScore :0\n  }\n  \n  addWin = () => this.setState({playerScore: this + 1});\n  addLoss = () => this.setState({cpuScore: this + 1});\n  getPlayerScore = () => {return this.state\n.playerScore}\n  getCpuScore = \n    () => {return this.state.cpuScore}\n  \n  render(){\n    return <div className=\"Score\">Player: {this.getPlayerScore()} Computer: {this.getCpuScore()}</div>;\n  }\n}*/"]},"metadata":{},"sourceType":"module"}